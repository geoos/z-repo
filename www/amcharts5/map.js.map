{"version":3,"sources":["webpack://@amcharts/amcharts5/./node_modules/polylabel/polylabel.js","webpack://@amcharts/amcharts5/./node_modules/tinyqueue/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/fsum.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/math.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/noop.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/stream.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/length.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/distance.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapLine.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/interpolate.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/range.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/graticule.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/GraticuleSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/compose.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/rotation.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/buffer.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/pointEqual.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/rejoin.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/cartesian.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/polygonContains.js","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/merge.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/circle.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/circle.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/rectangle.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/line.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/identity.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/transform.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/bounds.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/fit.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/resample.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/mercator.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/area.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/centroid.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/context.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/measure.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/string.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/centroid.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/area.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/bounds.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapUtils.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapChart.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapPointSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapPolygon.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapPolygonSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/ZoomControl.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/orthographic.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/conic.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/albers.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/equalEarth.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://@amcharts/amcharts5/./tmp/webpack/map.js"],"names":["Queue","polylabel","polygon","precision","debug","minX","minY","maxX","maxY","i","length","p","width","height","cellSize","Math","min","h","degeneratePoleOfInaccessibility","distance","cellQueue","undefined","compareMax","x","y","push","Cell","bestCell","area","points","len","j","a","b","f","getCentroidCell","bboxCell","d","numProbes","cell","pop","console","log","round","max","poleOfInaccessibility","this","inside","minDistSq","Infinity","k","ring","getSegDistSq","sqrt","pointToPolygonDist","SQRT2","px","py","dx","dy","t","default","module","exports","TinyQueue","data","compare","defaultCompare","_down","item","_up","top","bottom","pos","parent","current","halfLength","left","best","right","fields","_setRawDefault","_afterNew","_prepareChildren","_valuesDirty","isDirty","geoJSON","get","previous","_prevSettings","_geoJSONparsed","clear","_parseGeoJSON","id","includes","excludes","indexOf","features","type","geometry","feature","_types","checkInclude","dataItem","dataItems","value","dataObject","dataContext","geometryType","set","processDataItem","madeFromGeoData","properties","events","isEnabled","dispatch","target","_chart","children","moveValue","bulletsContainer","chart","getPrivate","_geometries","markDirtyGeometries","Series","MapSeries","className","Adder","_partials","Float64Array","_n","hi","lo","abs","n","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","ceil","exp","hypot","floor","pow","sin","sign","tan","asin","haversin","noop","streamGeometry","stream","streamGeometryType","hasOwnProperty","lengthSum","lambda0","sinPhi0","cosPhi0","streamObjectType","Feature","object","FeatureCollection","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lengthStream","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","delta","cosDelta","z","add","_beforeChanged","_projectionDirty","clipAngle","_clear","_display","context","markDirty","_clearDirty","position","totalDistance","currentDistance","positionA","positionB","pointA","pointB","segments","s","segment","positionAB","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","interpolate","B","A","longitude","latitude","Graphics","MapLine","List","Template","_root","mapLines","template","mapLine","make","_setDataItem","markDirtyProjection","makeMapLine","pointsToConnect","on","_markDirtyValues","setPrivate","coords","setRaw","disposeDataItem","removeValue","dispose","classNames","concat","MapLineSeries","start","stop","step","arguments","range","Array","graticuleX","map","graticuleY","makeDataItem","_dataItem","_generate","_updateChildren","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","GraticuleSeries","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","line","m","rejoin","shift","result","Intersection","other","entry","o","e","v","compareIntersection","startInside","subject","clip","forEach","p0","p1","pointEqual","sort","isSubject","array","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","merge","arrays","from","flatten","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","normal","angle","winding","sum","point0","phi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","pointLine","clean","ringSegments","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","circleRadius","acos","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","ax","ay","transformer","methods","TransformStream","key","prototype","constructor","bounds","fit","projection","fitBounds","clipExtent","scale","translate","fitExtent","fitSize","size","fitWidth","fitHeight","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","identity","recenter","center","apply","resample","reset","transformRotate","reflectX","reflectY","mercatorRaw","reclip","forward","mercatorProjection","setupDefaultRules","rule","ic","interfaceColors","bind","setAll","panX","panY","pinchZoom","zoomStep","zoomLevel","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","wheelEasing","wheelDuration","wheelSensitivity","maxPanOut","role","clipFront","clipBack","isMeasured","fillOpacity","strokeWidth","strokeOpacity","draw","display","moveTo","lineTo","Theme","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","lengthRing","PathString","_string","_circle","join","W0","W1","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","deltaSum","ranges","areaRing","dLambda","sdLambda","adLambda","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","getGeoCircle","geoPoint","constant","circle","getGeoCentroid","getGeoBounds","merged","deltaMax","getGeoRectangle","north","east","south","west","multiPolygon","stepLong","stepLat","ln","surface","ll","lt","normalizeGeoPoint","wrapAngleTo180","latitude180","path","projectionStream","contextStream","measure","setPrivateRaw","_geoCentroid","_geoBounds","chartContainer","_wheelDp","event","wheelEvent","originalEvent","preventDefault","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_disposers","innerWidth","innerHeight","_makeGeoPath","_fitMap","prev","hw","hh","centerLocation","xy","xx","yy","_handleSetWheel","previousGeometries","_geometryColection","_dirtyGeometries","series","each","_pw","_ph","newScale","_centerLocation","zoomControl","_disposeProperty","_mapBounds","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","duration","homeGeoPoint","homeZoomLevel","zoomToGeoPoint","_afterChanged","_defaultThemes","MapChartDefaultTheme","new","_settings","themeTags","seriesContainer","Rectangle","fill","Color","_handleChartDown","_handleChartUp","_handleChartMove","license","match","_showBranding","_downZoomLevel","count","_downPoints","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","_txa","_tya","_rxa","_rya","downPoint","l0","l1","_pLon","_pLat","_event","downPoints","movePoints","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","level","moveCenter","downCenter","tx","ty","_getDownPoint","downPointId","pointerId","_handlePinch","local","disableType","downLocation","location","easing","animate","newZoomLevel","zoomToPoint","geoBounds","mapBounds","convert","zl","readerAlert","_t","locale","SerialChart","MapChart","_positionBullets","bullets","bulletFunction","_makeBullet","bullet","sprite","lineDataItem","isType","lineDI","getDataItemById","polygonDataItem","polygonDI","positionOnLine","visualCentroid","positionToGeoPoint","geoPoint0","geoPoint1","_positionBulletReal","index","_index","geoPath","MapPointSeries","isHover","showTooltip","biggestArea","MapPolygon","mapPolygons","mapPolygon","makeMapPolygon","_addGeometry","_removeGeometry","zoomToGeoBounds","MapPolygonSeries","Button","verticalLayout","plusButton","icon","layout","minusButton","isPrivateDirty","_prevPrivateSettings","_disposer","zoomIn","zoomOut","Container","ZoomControl","orthographicRaw","equirectangularRaw","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","parallels","conicProjection","lower48Point","alaskaPoint","hawaiiPoint","lower48","conicEqualArea","alaska","hawaii","pointStream","albersUsa","streams","sc","cc","azimuthalInvert","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","naturalEarth1Raw","phi4","am5map"],"mappings":"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","file":"map.js","sourcesContent":["'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty || this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\")) {\n\t\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\t\tthis._geoJSONparsed = false;\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\n\t\t\tif (!this._geoJSONparsed) {\n\t\t\t\tthis._parseGeoJSON();\n\t\t\t\tthis._geoJSONparsed = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tif (features) {\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature.id;\n\n\t\t\t\t\t\t// @todo\n\t\t\t\t\t\t//if (this.chart.geodataNames && this.chart.geodataNames[id]) {\n\t\t\t\t\t\t//\tfeature.properties.name = this.chart.geodataNames[id];\n\t\t\t\t\t\t//}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\tif (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, id: id, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];;\n\t\t\t\t\t\tpointB = segment[0] as [number, number];;\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis._markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis._markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis._markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis._markDirtyValues(dataItem);\n\t\t}\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tpublic _markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tconst step = this.get(\"step\", 10);\n\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"plus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t\tdisplay.moveTo(0, -4);\r\n\t\t\t\tdisplay.lineTo(0, 4);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"minus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\r\n\r\n\t}\r\n}\r\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * @ignore\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * @ignore\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif(geoBounds.right < geoBounds.left){\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south >= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north <= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import type { MapSeries } from \"./MapSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when mouse wheel is turned horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is iniitalized\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tprotected _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted:boolean = false;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst chartContainer = this.chartContainer;\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tvar previousGeometries = this._geometryColection.geometries;\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tconst homeZoomLevel = this.get(\"homeZoomLevel\", 1);\n\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\n\t\tthis.zoomToGeoPoint(homeGeoPoint, homeZoomLevel, true, duration);\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\n\n\t\tlet count = $object.keys(this.chartContainer._downPoints).length;\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convert(point: IGeoPoint): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tconst xy = projection([point.longitude, point.latitude]);\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = this._movePoints[k];\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (moveCenter.x - tx - moveCenter.x + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (moveCenter.y - ty - moveCenter.y + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top });\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom });\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tconst xy = this.convert(geoPoint);\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\n\tlatitudeField?:string;\n\n\tlongitudeField?:string;\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tdataItem.set(\"geometry\", { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] });\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._makeBullet(dataItem, bulletFunction, i);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tsprite.set(\"x\", xy[0]);\n\t\t\t\tsprite.set(\"y\", xy[1]);\n\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number):Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.zoomToGeoPoint({ longitude: dataItem.get(\"longitude\", 0), latitude: dataItem.get(\"latitude\", 0) }, zoomLevel, true);\n\t\t}\n\t}\n\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tif (geometry.coordinates.length > 1) {\n\t\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\n\t\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\treturn { longitude: center[0], latitude: center[1] };\n\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t);\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tconst geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\n\tpublic _markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>):Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (geometry && chart) {\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry));\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { MapChart } from \"./MapChart\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { MultiDisposer } from \"../../core/util/Disposer\";\n\nexport interface IZoomControlSettings extends IContainerSettings {\n\n}\n\nexport interface IZoomControlPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends Container {\n\n\t/**\n\t * A [[Button]] for zoom in.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"plus\"] }));\n\n\t/**\n\t * A [[Button]] for zoom out.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"minus\"] }));\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomControl.className]);\n\n\tprotected _disposer: MultiDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"position\", \"absolute\");\n\n\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\tthis.set(\"x\", p100);\n\t\tthis.set(\"centerX\", p100);\n\n\t\tthis.set(\"y\", p100);\n\t\tthis.set(\"centerY\", p100);\n\n\t\tthis.set(\"paddingRight\", 10);\n\t\tthis.set(\"paddingBottom\", 10);\n\n\t\tthis.plusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t\tthis.minusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tconst chart = this.getPrivate(\"chart\");\n\t\t\tconst previous = this._prevPrivateSettings.chart;\n\t\t\tif (chart) {\n\t\t\t\tthis._disposer = new MultiDisposer([\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomIn()\n\t\t\t\t\t}),\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomOut()\n\t\t\t\t\t})])\n\t\t\t}\n\n\t\t\tif (previous && this._disposer) {\n\t\t\t\tthis._disposer.dispose();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import * as m from \"./../../dist/es2015/map.js\";\nexport const am5map = m;"],"sourceRoot":""}